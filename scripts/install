#!/bin/sh

export TERM=linux
run_shell() {
cd /
umount /1  /2 2>/dev/null
/bin/sh
exit
}

delay_disp() {
sleep 2
echo 5
sleep 2
echo 4
sleep 2
echo 3
sleep 2
echo 2
sleep 2
echo 1
sleep 2
echo 0
sleep 3
return
}

zstd=9402075ea79ca9bb95dc2c7082656d9e
gz=5b25786f919872ca265a821a845567c0
xz=a911b981b57c7ff4459151d00c7a42e9
lzma=316d74ab46ce480017d6db2d43358db4
ansi_red="\x1b[31m"
ansi_w="\x1b[0m"
mkdir -p /1 /2
if ! [ -s /scripts/reinstall ] ; then
udevd -d >/dev/null 2>/dev/null
sleep 3
fi

clear
#if [ "a$1" == "a" ] ;then
#exec 1>/dev/console
#exec 2>/dev/console
#fi

echo
echo
echo
modprobe vfat 2>/dev/null
modprobe nls_cp437 2>/dev/null
modprobe nls_utf8 2>/dev/null
modprobe ext4 2>/dev/null

for dev in /sys/block/sd*
do
 echo "add" > ${dev}/uevent
done

echo Scaning....
sleep 4

echo =========================================================
num=0
for dev in  /dev/sd* 
do

cd /
umount /1 2>/dev/null
mount ${dev} /1 >/dev/null 2>/dev/null

if ! [ -s /scripts/reinstall ] ; then
if [ -s  /1/install ] ; then
cd /
cp /1/install /sbin
umount /1 2>/dev/null
chmod 755 /sbin/install
date >/scripts/reinstall
/sbin/install
exit
fi #-s /1/install
fi
 m=$( uname -m )
case $m  in
  x86_64)
    prefix="x86"
    ;;
  mips64)
    prefix="loongson"
    ;;
  *)
    prefix=$m
    ;;
esac
dst_disk="sda"
export dst_disk="$dst_disk"

cd /1
for fname in ${prefix}*_20*.tar.*
do
if  [ "$fname" = "${prefix}*_20*.tar.*" ] ; then
 break;
fi
if [ "`echo $fname |grep patch`" ] ; then
 continue;
fi

num=$(( $num + 1 ))
dd if=/1/$fname count=2 bs=1 of=/scripts/${num}.magic >/dev/null 2>/dev/null
md5sum /scripts/${num}.magic
if [ "a`md5sum /scripts/${num}.magic |grep -v -e $zstd -e $xz -e $gz -e $lzma`" =="a" ] ; then
     echo skip $fname
   num=$(( $num - 1 ))
 else
   echo ok $fname
fi

size=`ls -kl /1/$fname  |awk '{ printf int($5/1000000+0.5)"M"}'`
echo $size >/scripts/${num}.size
echo -e "$num\t${dev}\t$fname\t$size"
echo $dev >/scripts/${num}.dev
echo $fname >/scripts/${num}.file
done #for fname in loongson*_20*.tar.*
done #for dev in  /dev/sd* /dev/ub* /dev/cdrom*
echo =========================================================
cd /
umount /1 2>/dev/null
if [ "${num}" = "0" ] ;then
echo tar package file not find ...
echo rescan or shell? [Enter]
read rescan
case "$rescan" in 
	shell)
	run_shell
	;;
	no)
	poweroff
	;;
	*)
	echo insert new u-disk, please.
	echo rescan >/scripts/reinstall
	delay_disp
	cd /
	umount /1 2>/dev/null
	exit
	;;
esac	
fi # $num=0 

if [ "$num" = "1" ]
then 
select=1
else
echo Please Select [1,2,3...,rescan,shell]:
read select 
if [ "a$select" = "a" ] || [ "$select" = "rescan" ]]
then
echo Rescan...
echo Please insert new  u-disk
echo rescan >/scripts/reinstall
delay_disp
cd /
umount /1 2>/dev/null
exit
fi
if [ "$select" = "shell" ]
then
run_shell
fi
fi
if [ -e /scripts/${select}.dev ]
then
dev=`cat /scripts/${select}.dev`
if [ "`grep sda /scripts/${select}.dev`" ] ; then
dst_disk=sdb
export dst_disk="$dst_disk"
fi
if [ "a$1" != "a" ] ; then
dst_disk=$1
fi
export dst_disk=$dst_disk
file=`cat /scripts/${select}.file`
size=`cat /scripts/${select}.size`
else
echo rescan >/scripts/reinstall
echo Rescan...
echo Please insert new  u-disk
delay_disp
cd /
umount /1 2>/dev/null
exit
fi
while ! [ -x /dev/$dst_disk ]
do
  echo target disk $dst_disk not find!
  echo please insert $dst_disk
  delay_disp
done

clear

cat /scripts/version
cat /scripts/build_time
echo =========================================================
echo $dev $file $size
echo =========================================================
echo disk /dev/${dst_disk} All data will delete!   continue? [yes/No/rescan/shell]
read seta
if [ "$seta" = "shell" ]
then
run_shell
fi
if [ "$seta" = "rescan" ] 
then
echo rescan >/scripts/reinstall
echo Rescan...
echo Please insert new  u-disk
delay_disp
cd /
umount /1 2>/dev/null
exit
fi

if [ "a$seta" = "a" ]
then
echo rescan >/scripts/reinstall
echo Rescan...
echo Please insert new  u-disk
delay_disp
cd /
umount /1  2>/dev/null
exit
fi

if [ "${seta}" != "yes" ]
then
echo No! Poweroff...
sleep 5
poweroff
fi

echo
echo =========================================================
hdparm -i /dev/${dst_disk} |grep Model
echo =========================================================
lsblk /dev/${dst_disk}
echo =========================================================

echo DISK /dev/${dst_disk}*
echo -e "${ansi_red}ALL DATA WILL DELETE!!!${ansi_w}"
echo continue? [yes/No]
read seta
if [ "$seta" != "yes" ]
then
echo No! Poweroff...
sleep 5
poweroff
fi

mbr_bakfile=${dst_disk}.tab_bak`date +%Y%m%d%H%M%S`
sfdisk -d /dev/${dst_disk} > /${mbr_bakfile}

dd if=/dev/zero of=/dev/${dst_disk} count=1 bs=512 >/dev/null 2>/dev/null
sfdisk --force /dev/${dst_disk}	<scripts/120G.txt >/dev/null 2>/dev/null
sleep 3
echo "1. format /dev/${dst_disk}1 /boot"
mkfs.ext3 -L boot -F /dev/${dst_disk}1  >/dev/null 2>/dev/null
echo "2. format /dev/${dst_disk}2 /boot/efi"
mkfs.vfat -L EFI /dev/${dst_disk}2 >/dev/null 2>/dev/null
echo "3. format /dev/${dst_disk}3 swap"
mkswap -L SWAP /dev/${dst_disk}3 >/dev/null 2>/dev/null
echo "4. format /dev/${dst_disk}4 /"
mkfs.ext4 -L root -F /dev/${dst_disk}4  >/dev/null 2>/dev/null
mount -o barrier=0 -t ext4 /dev/${dst_disk}4 /2 >/dev/null 2>/dev/null
mkdir -p /2/boot
mount -t ext3 /dev/${dst_disk}1 /2/boot
mkdir -p /2/boot/efi
mount -t vfat /dev/${dst_disk}2 /2/boot/efi
cd /2
umount /1 2>/dev/null
mount  ${dev} /1 >/dev/null 2>/dev/null
if [ $? != 0 ] ; then
 umount /1 >/dev/null 2>/dev/null
 fsck -y ${dev} >/dev/null 2>/dev/null
 mount  ${dev} /1 >/dev/null 2>/dev/null
fi	
sleep 2
cp /$mbr_bakfile /1

echo 5. export $file to /dev/${dst_disk}4
magic=$( md5sum /scripts/${select}.magic |awk '{print $1}' )
case $magic in
  $lzma)
    gunzip=lzma
    ;;
  $gz)
    gunzip=gzip
    ;;
  $zstd)
    gunzip=zstd
    ;;
  $xz)
    gunzip=xz
    ;;
esac

 pv /1/$file |$gunzip -dc|tar x -C /2
rm -f /2/etc/udev/rules.d/70-persistent-net.rules
mount -t proc none /2/proc >/dev/null 2>/dev/null
mount -t sysfs none /2/sys >/dev/null 2>/dev/null
mount -t devtmpfs none /2/dev >/dev/null 2>/dev/null
cp /scripts/fstab /2/etc

if [ -e /2/tmp/fix.sh ] ;then
chmod 777 /2/tmp/fix.sh
chroot /2 /tmp/fix.sh
fi
if [ -e /2/fix.sh ] ;then
chmod 777 /2/fix.sh
chroot /2 /fix.sh
fi

case $m in 
  x86_64)
    ;;
  mips64)
    cp /scripts/boot.cfg /2/boot/boot.cfg
    cp /scripts/update-pmon /2/tmp
    chroot /2 /tmp/update-pmon
    ;;
  *)
chroot /2 update-grub >/dev/null 2>/dev/null
chroot /2 grub-install /dev/${dst_disk} >/dev/null 2>/dev/null
;;
esac

cp /scripts/ghost.sh /2/usr/local/sbin
umount -f /2/boot/efi >/dev/null 2>/dev/null
umount -f /2/proc /2/dev /2/sys /2/boot >/dev/null 2>/dev/null
umount -f /2 /1 >/dev/null 2>/dev/null
echo 6. set uefi
efibootmgr -L "debian" -B
efibootmgr -c -d /dev/${dst_disk} -p 2 -L "debian" -l \EFI\debian\grubloongarch64.efi

echo 9. ok!
echo please reboot.
umount /2/dev /2/proc /2/sys 2>/dev/null

while read select
do
 sleep 3
done
poweroff
exit
